param(
    [string]$ServicePath
)

Write-Host "------------------------------------------------------------"
Write-Host "üîÅ Kundli Service Monolith Migration Tool"
Write-Host "------------------------------------------------------------"

# Ask if path not given
if (-not $ServicePath) {
    $ServicePath = Read-Host "Enter the full path to your Kundli service folder"
}

# Validate path
if (!(Test-Path $ServicePath)) {
    Write-Host "‚ùå ERROR: Folder does not exist: $ServicePath" -ForegroundColor Red
    exit 1
}

Set-Location $ServicePath
Write-Host "üìÇ Working directory: $ServicePath"

# Remove old Docker/Flask files
$dockerfile = Join-Path $ServicePath "Dockerfile"
$requirements = Join-Path $ServicePath "requirements.txt"
$venv = Join-Path $ServicePath "venv"
$pyFiles = Get-ChildItem *.py -ErrorAction SilentlyContinue

if (Test-Path $dockerfile) {
    Remove-Item $dockerfile -Force
    Write-Host "üóëÔ∏è Removed Dockerfile"
}

if (Test-Path $requirements) {
    Remove-Item $requirements -Force
    Write-Host "üóëÔ∏è Removed requirements.txt"
}

if (Test-Path $venv) {
    Remove-Item $venv -Recurse -Force
    Write-Host "üóëÔ∏è Removed Python venv folder"
}

foreach ($file in $pyFiles) {
    Remove-Item $file.FullName -Force
    Write-Host "üóëÔ∏è Removed Python file: $($file.Name)"
}

# Create new kundliService.js template
$nodeFile = Join-Path $ServicePath "kundliService.js"
@"
//
// kundliService.js
//
// Node.js module to replace old Flask Kundli service
// Auto-generated by migration script
//

// Install this dependency in your project root:
// npm install swisseph

const swe = require('swisseph');

function generateKundli(birthDate, birthTime, latitude, longitude) {
    // TODO: Implement Swiss Ephemeris calculation
    // Example placeholder
    return {
        ascendant: null,
        planets: {},
        birthDetails: { birthDate, birthTime, latitude, longitude }
    };
}

function matchKundli(boyData, girlData) {
    // TODO: Implement matching logic
    return {
        gunaBreakdown: [],
        overallScore: 0,
        maxScore: 21,
        resultText: "Pending Implementation",
        remedies: []
    };
}

module.exports = { generateKundli, matchKundli };
"@ | Out-File -Encoding UTF8 $nodeFile

Write-Host "‚úÖ Created new Node.js service: kundliService.js"

Write-Host "------------------------------------------------------------"
Write-Host "‚úÖ Migration Complete!"
Write-Host "------------------------------------------------------------"
Write-Host "üí° Next Steps:"
Write-Host "1Ô∏è‚É£ In your Node.js project, run: npm install swisseph"
Write-Host "2Ô∏è‚É£ Fill in generateKundli and matchKundli in kundliService.js"
Write-Host "3Ô∏è‚É£ Import it in your Express routes:"
Write-Host '    const { generateKundli, matchKundli } = require("./kundliService");'
Write-Host "4Ô∏è‚É£ Replace old HTTP calls with direct function calls."
Write-Host "------------------------------------------------------------"
